// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model action {
  action_id         Int                 @id @default(autoincrement())
  action_name       String              @default("")
  interlibrary_loan interlibrary_loan[]
}

model category {
  category_id   Int    @id @default(autoincrement())
  category_name String @default("")
}

model condition {
  condition_id    Int    @id @default(autoincrement())
  condition_name  String @default("")
  short_term_loan Int    @default(0)
}

model book {
  book_id           Int                 @id @default(autoincrement())
  title             String              @default("")
  author            String              @default("")
  category_id       Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now())
  no_of_copiies     Int                 @default(0)
  condition_id      Int
  interlibrary_loan interlibrary_loan[]
}

model borrower {
  borrower_id       Int                 @id @default(autoincrement())
  fullname          String              @default("")
  mobile_no         String              @default("")
  email             String              @default("")
  address           String              @default("")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now())
  interlibrary_loan interlibrary_loan[]
}

model librarian {
  librarian_id      Int                 @id @default(autoincrement())
  fullname          String              @default("")
  email             String              @default("")
  mobile_no         String              @default("")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now())
  interlibrary_loan interlibrary_loan[]
}

model interlibrary_loan {
  id           Int       @id @default(autoincrement())
  book_id      Int
  borrower_id  Int
  librarian_id Int
  action_id    Int
  due_date     DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  book         book      @relation(fields: [book_id], references: [book_id], onDelete: NoAction, onUpdate: NoAction, map: "add_foreignkey_book")
  borrower     borrower  @relation(fields: [borrower_id], references: [borrower_id], onDelete: NoAction, onUpdate: NoAction, map: "add_foreignkey_borrower")
  librarian    librarian @relation(fields: [librarian_id], references: [librarian_id], onDelete: NoAction, onUpdate: NoAction, map: "add_foreignkey_librarian")
  action       action    @relation(fields: [action_id], references: [action_id], onDelete: NoAction, onUpdate: NoAction, map: "add_foreignkey_action")
}
